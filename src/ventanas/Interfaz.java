/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;
import java.awt.Image;
import java.awt.Toolkit;
import datos.VisitantesJDBC;
import domain.Visitante;
import java.util.List;
import datos.Conexion;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Andres-PC-Local
 */
public class Interfaz extends javax.swing.JFrame {
    

    
    
    
    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        setSize(594,410);
        this.setLocationRelativeTo(null);
    }
    
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/icono.png")); 
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonRegistrar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        textFieldIdentificacion = new java.awt.TextField();
        textFieldNombres = new java.awt.TextField();
        jLabel4 = new javax.swing.JLabel();
        textFieldApellidos = new java.awt.TextField();
        jLabel5 = new javax.swing.JLabel();
        textFieldTelefono = new java.awt.TextField();
        jLabel6 = new javax.swing.JLabel();
        textFieldTemperatura = new java.awt.TextField();
        jLabel7 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonActualizar = new javax.swing.JButton();
        botonConsultar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setIconImages(getIconImages());
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botonRegistrar.setBackground(new java.awt.Color(0, 0, 102));
        botonRegistrar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        botonRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        botonRegistrar.setText("Registrar");
        botonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });
        getContentPane().add(botonRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, 100, 20));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nombres del visitante:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, -1, -1));

        textFieldIdentificacion.setBackground(new java.awt.Color(0, 0, 102));
        textFieldIdentificacion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        textFieldIdentificacion.setForeground(new java.awt.Color(255, 255, 255));
        textFieldIdentificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldIdentificacionActionPerformed(evt);
            }
        });
        getContentPane().add(textFieldIdentificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 240, -1));

        textFieldNombres.setBackground(new java.awt.Color(0, 0, 102));
        textFieldNombres.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        textFieldNombres.setForeground(new java.awt.Color(255, 255, 255));
        textFieldNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldNombresActionPerformed(evt);
            }
        });
        getContentPane().add(textFieldNombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 240, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Número de identificación:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, -1));

        textFieldApellidos.setBackground(new java.awt.Color(0, 0, 102));
        textFieldApellidos.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        textFieldApellidos.setForeground(new java.awt.Color(255, 255, 255));
        textFieldApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldApellidosActionPerformed(evt);
            }
        });
        getContentPane().add(textFieldApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 240, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Apellidos del visitante:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));

        textFieldTelefono.setBackground(new java.awt.Color(0, 0, 102));
        textFieldTelefono.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        textFieldTelefono.setForeground(new java.awt.Color(255, 255, 255));
        textFieldTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldTelefonoActionPerformed(evt);
            }
        });
        getContentPane().add(textFieldTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 240, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Teléfono del visitante:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, -1));

        textFieldTemperatura.setBackground(new java.awt.Color(0, 0, 102));
        textFieldTemperatura.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        textFieldTemperatura.setForeground(new java.awt.Color(255, 255, 255));
        textFieldTemperatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldTemperaturaActionPerformed(evt);
            }
        });
        getContentPane().add(textFieldTemperatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, 240, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Temperatura en °C del visitante:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, -1, -1));

        jButton6.setBackground(new java.awt.Color(0, 0, 102));
        jButton6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Salir");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 310, 100, 20));

        botonEliminar.setBackground(new java.awt.Color(0, 0, 102));
        botonEliminar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        botonEliminar.setForeground(new java.awt.Color(255, 255, 255));
        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(botonEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 250, 100, 20));

        botonActualizar.setBackground(new java.awt.Color(0, 0, 102));
        botonActualizar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        botonActualizar.setForeground(new java.awt.Color(255, 255, 255));
        botonActualizar.setText("Actualizar");
        botonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(botonActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 190, 100, 20));

        botonConsultar.setBackground(new java.awt.Color(0, 0, 102));
        botonConsultar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        botonConsultar.setForeground(new java.awt.Color(255, 255, 255));
        botonConsultar.setText("Consultar");
        botonConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarActionPerformed(evt);
            }
        });
        getContentPane().add(botonConsultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 100, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Fondo.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 600, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarActionPerformed
         
        boolean datosIngresadosCorrectos = false;
        int identificacion =0;
        String nombres = "";
        String apellidos="";
        String telefono="";
        float temperatura = 0;
        if(!(textFieldIdentificacion.getText().trim()).equals("") &&
           !(textFieldNombres.getText().trim()).equals("") &&
           !(textFieldApellidos.getText().trim()).equals("") &&
           !(textFieldTelefono.getText().trim()).equals("") &&
           !(textFieldTemperatura.getText().trim()).equals("")){// Si los campos estan todos diligenciados
                try{
                    identificacion = Integer.parseInt(textFieldIdentificacion.getText().trim());
                    nombres = textFieldNombres.getText().trim();
                    apellidos = textFieldApellidos.getText().trim();
                    telefono = textFieldTelefono.getText().trim();
                    temperatura = Float.parseFloat(textFieldTemperatura.getText().trim());
                    datosIngresadosCorrectos = true;// si no hay catch quiere decir que metieron bn los datos
                }catch(NumberFormatException nfe){
                    JOptionPane.showMessageDialog(null, "Debes diligenciar correctamente los campos");
                }
                if(datosIngresadosCorrectos){                  
                    VisitantesJDBC visitantesJDBC = new VisitantesJDBC();//Variables para acceso a base de datos                    
                    Connection conn = null;//Creamos objeto de tipo conexion, se va a compartir para todos los querys que ejecutemos
                    try{
                        conn = Conexion.getConnection();                       
                        if(conn.getAutoCommit()){// Revisamos si la conexion esta en modo autocommit//por defecto es autoommit==true
                            conn.setAutoCommit(false);
                        }
                        VisitantesJDBC visitantes = new VisitantesJDBC(conn);//Creamos el objeto VisitantesJDBC//proporcionamos la conexion creada
                        List<Visitante> visitantes2 = visitantesJDBC.select(identificacion);
                        if(visitantes2.isEmpty()){//El registro no esta creado aun
                           visitantes.insert(identificacion, nombres, apellidos, telefono, temperatura); 
                           conn.commit(); 
                           textFieldIdentificacion.setText("");
                           textFieldNombres.setText("");
                           textFieldApellidos.setText("");
                           textFieldTelefono.setText("");
                           textFieldTemperatura.setText("");
                           JOptionPane.showMessageDialog(null, "Registro Exitoso");
                        }else{
                           JOptionPane.showMessageDialog(null, "Número de identificacion ya registrado"); 
                        }
                    }catch(SQLException e){
                        try{//hacemos rollback en caso de error
                            System.out.println("Entramos al rollback registro");                        
                            e.printStackTrace();//imprimimos la excepcion a la consola
                            conn.rollback();//Hacemos rollback
                        }catch(SQLException e1){
                            e1.printStackTrace();
                        }
                    }              
                }         
        }else{
            JOptionPane.showMessageDialog(null, "Debes diligenciar todos los campos");
        } 
    }//GEN-LAST:event_botonRegistrarActionPerformed

    private void textFieldIdentificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldIdentificacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldIdentificacionActionPerformed

    private void textFieldNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldNombresActionPerformed

    private void textFieldApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldApellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldApellidosActionPerformed

    private void textFieldTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldTelefonoActionPerformed

    private void textFieldTemperaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldTemperaturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldTemperaturaActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        
        boolean datosIngresadosCorrectos = false;
        int identificacion =0;
        if(!(textFieldIdentificacion.getText().trim()).equals("")){// Si los campos estan todos diligenciados
                try{
                    identificacion = Integer.parseInt(textFieldIdentificacion.getText().trim());
                    datosIngresadosCorrectos = true;// si no hay catch quiere decir que metieron bn los datos                    
                }catch(NumberFormatException nfe){
                    JOptionPane.showMessageDialog(null, "Debes diligenciar correctamente los campos");
                }
                if(datosIngresadosCorrectos){                    
                    VisitantesJDBC visitantesJDBC = new VisitantesJDBC();//Variables para acceso a base de datos
                    Connection conn = null;//Creamos objeto de tipo conexion, se va a compartir para todos los querys que ejecutemos
                    try{
                        conn = Conexion.getConnection();
                        if(conn.getAutoCommit()){// Revisamos si la conexion esta en modo autocommit//por defecto es autoommit==true
                            conn.setAutoCommit(false);
                        }                        
                        List<Visitante> visitantes2 = visitantesJDBC.select(identificacion);
                        if(visitantes2.isEmpty()){//El registro no esta creado aun                           
                           JOptionPane.showMessageDialog(null, "Registro no encontrado");
                        }else{
                           VisitantesJDBC visitantes = new VisitantesJDBC(conn);
                           visitantes.delete(identificacion);
                           conn.commit();
                           textFieldIdentificacion.setText("");
                           textFieldNombres.setText("");
                           textFieldApellidos.setText("");
                           textFieldTelefono.setText("");
                           textFieldTemperatura.setText("");
                           JOptionPane.showMessageDialog(null, "Registro eliminado correctamente");
                        }
                    }catch(SQLException e){                        
                        try{//hacemos rollback en caso de error
                            System.out.println("Entramos al rollback consulta");                       
                            e.printStackTrace();//imprimimos la excepcion a la consola
                            conn.rollback();//Hacemos rollback
                        }catch(SQLException e1){
                            e1.printStackTrace();
                        }
                    }              
                }         
        }else{
            JOptionPane.showMessageDialog(null, "Debes diligenciar la identificación");
        }       
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
        
        boolean datosIngresadosCorrectos = false;
        int identificacion =0;
        String nombres = "";
        String apellidos="";
        String telefono="";
        float temperatura = 0;
        if(!(textFieldIdentificacion.getText().trim()).equals("") &&
           !(textFieldNombres.getText().trim()).equals("") &&
           !(textFieldApellidos.getText().trim()).equals("") &&
           !(textFieldTelefono.getText().trim()).equals("") &&
           !(textFieldTemperatura.getText().trim()).equals("")){// Si los campos estan todos diligenciados
                try{
                    identificacion = Integer.parseInt(textFieldIdentificacion.getText().trim());
                    nombres = textFieldNombres.getText().trim();
                    apellidos = textFieldApellidos.getText().trim();
                    telefono = textFieldTelefono.getText().trim();
                    temperatura = Float.parseFloat(textFieldTemperatura.getText().trim());
                    datosIngresadosCorrectos = true;// si no hay catch quiere decir que metieron bn los datos
                }catch(NumberFormatException nfe){
                    JOptionPane.showMessageDialog(null, "Debes diligenciar correctamente los campos");
                }
                if(datosIngresadosCorrectos){                  
                    VisitantesJDBC visitantesJDBC = new VisitantesJDBC();//Variables para acceso a base de datos                    
                    Connection conn = null;//Creamos objeto de tipo conexion, se va a compartir para todos los querys que ejecutemos
                    try{
                        conn = Conexion.getConnection();                       
                        if(conn.getAutoCommit()){// Revisamos si la conexion esta en modo autocommit//por defecto es autoommit==true
                            conn.setAutoCommit(false);
                        }
                        VisitantesJDBC visitantes = new VisitantesJDBC(conn);//Creamos el objeto VisitantesJDBC//proporcionamos la conexion creada
                        List<Visitante> visitantes2 = visitantesJDBC.select(identificacion);
                        if(visitantes2.isEmpty()){//El registro no esta creado aun
                           JOptionPane.showMessageDialog(null, "El registro no existe");
                        }else{
                           visitantes.update(nombres, apellidos, telefono, temperatura, identificacion);
                           conn.commit();
                            textFieldIdentificacion.setText("");
                            textFieldNombres.setText("");
                            textFieldApellidos.setText("");
                            textFieldTelefono.setText("");
                            textFieldTemperatura.setText("");
                           JOptionPane.showMessageDialog(null, "Registro actualizado correctamente"); 
                        }
                    }catch(SQLException e){
                        try{//hacemos rollback en caso de error
                            System.out.println("Entramos al rollback registro");                        
                            e.printStackTrace();//imprimimos la excepcion a la consola
                            conn.rollback();//Hacemos rollback
                        }catch(SQLException e1){
                            e1.printStackTrace();
                        }
                    }              
                }         
        }else{
            JOptionPane.showMessageDialog(null, "Debes diligenciar todos los campos");
        }     
    }//GEN-LAST:event_botonActualizarActionPerformed

    private void botonConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarActionPerformed
        
        boolean datosIngresadosCorrectos = false;
        int identificacion =0;
        if(!(textFieldIdentificacion.getText().trim()).equals("")){// Si los campos estan todos diligenciados
                try{
                    identificacion = Integer.parseInt(textFieldIdentificacion.getText().trim());
                    datosIngresadosCorrectos = true;// si no hay catch quiere decir que metieron bn los datos                    
                }catch(NumberFormatException nfe){
                    JOptionPane.showMessageDialog(null, "Debes diligenciar correctamente los campos");
                }
                if(datosIngresadosCorrectos){                    
                    VisitantesJDBC visitantesJDBC = new VisitantesJDBC();//Variables para acceso a base de datos
                    Connection conn = null;//Creamos objeto de tipo conexion, se va a compartir para todos los querys que ejecutemos
                    try{
                        conn = Conexion.getConnection();
                        if(conn.getAutoCommit()){// Revisamos si la conexion esta en modo autocommit//por defecto es autoommit==true
                            conn.setAutoCommit(false);
                        }                        
                        List<Visitante> visitantes2 = visitantesJDBC.select(identificacion);
                        if(visitantes2.isEmpty()){//El registro no esta creado aun                           
                           JOptionPane.showMessageDialog(null, "Registro no encontrado");
                        }else{
                            textFieldIdentificacion.setText(String.valueOf(visitantes2.get(0).getIdVisitante()));
                            textFieldNombres.setText(String.valueOf(visitantes2.get(0).getNombres()));
                            textFieldApellidos.setText(String.valueOf(visitantes2.get(0).getApellidos()));
                            textFieldTelefono.setText(String.valueOf(visitantes2.get(0).getTelefono()));
                            textFieldTemperatura.setText(String.valueOf(visitantes2.get(0).getTemperatura()));
                        }
                    }catch(SQLException e){                        
                        try{//hacemos rollback en caso de error
                            System.out.println("Entramos al rollback consulta");                       
                            e.printStackTrace();//imprimimos la excepcion a la consola
                            conn.rollback();//Hacemos rollback
                        }catch(SQLException e1){
                            e1.printStackTrace();
                        }
                    }              
                }         
        }else{
            JOptionPane.showMessageDialog(null, "Debes diligenciar la identificación");
        }    
    }//GEN-LAST:event_botonConsultarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActualizar;
    private javax.swing.JButton botonConsultar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonRegistrar;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private java.awt.TextField textFieldApellidos;
    private java.awt.TextField textFieldIdentificacion;
    private java.awt.TextField textFieldNombres;
    private java.awt.TextField textFieldTelefono;
    private java.awt.TextField textFieldTemperatura;
    // End of variables declaration//GEN-END:variables
}
